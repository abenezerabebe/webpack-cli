// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`terserPlugin transforms correctly using "terserPlugin-0" data 1`] = `
"module.exports = {
	optimization: {
        minimize: true
    }
};
"
`;

exports[`terserPlugin transforms correctly using "terserPlugin-1" data 1`] = `
"const TerserPlugin = require(\\"terser-webpack-plugin\\");
module.exports = {
	devtool: \\"source-map\\",
	optimization: {
        minimize: true,

        minimizer: [new TerserPlugin({
			sourceMap: true,
			compress: {}
		})]
    }
};
"
`;

exports[`terserPlugin transforms correctly using "terserPlugin-2" data 1`] = `
"const TerserPlugin = require(\\"terser-webpack-plugin\\");
module.exports = {
	devtool: \\"source-map\\",
	optimization: {
        minimize: true,

        minimizer: [new TerserPlugin({
			sourceMap: true,
			compress: {}
		})]
    }
};
"
`;

exports[`terserPlugin transforms correctly using "terserPlugin-3" data 1`] = `
"module.exports = {
    devtool: \\"eval\\",
    entry: [\\"./src/index\\"],

    output: {
		path: path.join(__dirname, \\"dist\\"),
		filename: \\"index.js\\"
	},

    module: {
		loaders: [
			{
				test: /.js$/,
				loaders: [\\"babel\\"],
				include: path.join(__dirname, \\"src\\")
			}
		]
	},

    resolve: {
		root: path.resolve(\\"/src\\"),
		modules: [\\"node_modules\\"]
	},

    plugins: [new webpack.optimize.OccurrenceOrderPlugin()],
    debug: true,

    optimization: {
        minimize: true
    }
};
"
`;

exports[`terserPlugin transforms correctly using "terserPlugin-4" data 1`] = `
"const TerserPlugin = require('terser-webpack-plugin');
module.exports = {
    devtool: \\"eval\\",
    entry: [\\"./src/index\\"],

    output: {
		path: path.join(__dirname, \\"dist\\"),
		filename: \\"index.js\\"
	},

    module: {
		loaders: [
			{
				test: /.js$/,
				loaders: [\\"babel\\"],
				include: path.join(__dirname, \\"src\\")
			}
		]
	},

    resolve: {
		root: path.resolve(\\"/src\\"),
		modules: [\\"node_modules\\"]
	},

    plugins: [new webpack.optimize.OccurrenceOrderPlugin()],
    debug: true,

    optimization: {
        minimize: true,

        minimizer: [new TerserPlugin({
			sourceMap: true
		})]
    }
};
"
`;
